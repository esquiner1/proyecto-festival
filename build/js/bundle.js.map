{"version":3,"sources":["app.js","galeria.js"],"names":["navegacionFija","barra","document","querySelector","IntersectionObserver","entries","isIntersecting","classList","remove","add","observe","scrollNav","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","target","attributes","href","value","scrollIntoView","behavior","crearGaleria","galeria","i","imagen","createElement","src","dataset","imagenId","onclick","mostrarImagen","lista","appendChild","id","parseInt","overlay","body","cerrarImg","textContent"],"mappings":"AAKA,SAAAA,iBAEA,MAAAC,EAAAC,SAAAC,cAAA,WAGA,IAAAC,sBAAA,SAAAC,GACAA,EAAA,GAAAC,eACAL,EAAAM,UAAAC,OAAA,QAEAP,EAAAM,UAAAE,IAAA,WAKAC,QAAAR,SAAAC,cAAA,eAGA,SAAAQ,YACAT,SAAAU,iBAAA,2BACAC,SAAA,SAAAC,GACAA,EAAAC,iBAAA,SAAA,SAAAC,GACAA,EAAAC,iBAEAf,SAAAC,cAAAa,EAAAE,OAAAC,WAAAC,KAAAC,OAEAC,eAAA,CACAC,SAAA,iBC3BA,SAAAC,eACA,MAAAC,EAAAvB,SAAAC,cAAA,qBACA,IAAA,IAAAuB,EAAA,EAAAA,GAAA,GAAAA,IAAA,CACA,MAAAC,EAAAzB,SAAA0B,cAAA,OACAD,EAAAE,IAAA,mBAAAH,SAEAC,EAAAG,QAAAC,SAAAL,EAGAC,EAAAK,QAAAC,cAEA,MAAAC,EAAAhC,SAAA0B,cAAA,MACAM,EAAAC,YAAAR,GACAF,EAAAU,YAAAD,IAIA,SAAAD,cAAAjB,GAGA,MAAAoB,EAAAC,SAAArB,EAAAE,OAAAY,QAAAC,UAIAJ,EAAAzB,SAAA0B,cAAA,OACAD,EAAAE,IAAA,oBAAAO,SAEA,MAAAE,EAAApC,SAAA0B,cAAA,OACAU,EAAAH,YAAAR,GACAW,EAAA/B,UAAAE,IAAA,WAEA6B,EAAAN,QAAA,WACAM,EAAA9B,SACA+B,EAAAhC,UAAAC,OAAA,eAIA,MAAAgC,EAAAtC,SAAA0B,cAAA,KACAY,EAAAC,YAAA,IACAD,EAAAjC,UAAAE,IAAA,cAGA+B,EAAAR,QAAA,WACAM,EAAA9B,SACA+B,EAAAhC,UAAAC,OAAA,eAGA8B,EAAAH,YAAAK,GAGA,MAAAD,EAAArC,SAAAC,cAAA,QACAoC,EAAAJ,YAAAG,GACAC,EAAAhC,UAAAE,IAAA,cDxDAP,SAAAa,iBAAA,oBAAA,WACAJ,YACAX,oBCFAE,SAAAa,iBAAA,oBAAA,WACAS","file":"bundle.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\r\n    scrollNav();\r\n    navegacionFija();\r\n});\r\n\r\nfunction navegacionFija() {\r\n\r\n    const barra = document.querySelector(\".header\");\r\n\r\n    //REGISTRAR EL INTERSECTION OBSERVER \r\n    const observer = new IntersectionObserver( function (entries) {//entries nos va dar la informacion del elemnto a observar\r\n        if(entries[0].isIntersecting){\r\n            barra.classList.remove(\"fijo\");\r\n        }else{\r\n            barra.classList.add(\"fijo\");\r\n        }\r\n    }); //(API) cada ve que yo haga scroll INTERSECTION OBSERVER va estar revisando  por un  elemento si esta visible en la pantalla del navegador o no \r\n\r\n    //ELEMENTO A OBSERVAR\r\n    observer.observe(document.querySelector(\".vocalista\"));//le estamos dando informacion a esta funcion si esta siendo observadao no \r\n}\r\n\r\nfunction scrollNav() {\r\n    const enlaces = document.querySelectorAll(\".navegacion-Principal a\");\r\n    enlaces.forEach(function (enlace) {//para que escuche o aplique el addEventListener hay que  iterar los elemntos y lo hacemos con un forEach\r\n            enlace.addEventListener(\"click\",function (e){\r\n                e.preventDefault();\r\n\r\n                const seccion = document.querySelector(e.target.attributes.href.value);\r\n\r\n                seccion.scrollIntoView({\r\n                    behavior:\"smooth\"//este es para darle un scrool de una forma suave\r\n                });\r\n            });\r\n        }); \r\n}   \r\n","document.addEventListener(\"DOMContentLoaded\",function () {\r\n    crearGaleria();\r\n});\r\n\r\nfunction crearGaleria() {\r\n    const galeria = document.querySelector(\".galeria-imagenes\");\r\n    for (let i = 1; i <= 12; i++) {\r\n        const imagen = document.createElement(\"IMG\");\r\n        imagen.src =`build/img/thumb/${i}.webp`;\r\n\r\n        imagen.dataset.imagenId = i;//le estamos dando una propiedad para identificar que imagen estamos dando click.\r\n        //le puedes dar el nocmbre que quieras en este caso fue imagenId en el html se ve como (data-imagen-id)\r\n        //añadir la funcion mostrar imagen \r\n        imagen.onclick = mostrarImagen;\r\n\r\n        const lista = document.createElement(\"LI\");//crea la lista <li> </li>\r\n        lista.appendChild(imagen);// pone la imagen como child (hijo) de lista\r\n        galeria.appendChild(lista);//pone la lista como child de galeria \r\n    }\r\n\r\n}\r\nfunction mostrarImagen(e) {\r\n    // e.target se refiere elemento clickado <li>\r\n    // Esto es diferente de e.currentTarget, que se referiría al padre <ul> en este contexto\r\n    const id = parseInt(e.target.dataset.imagenId);\r\n   \r\n\r\n     //AQUI me va a generar la imagen\r\n     const imagen = document.createElement(\"IMG\");\r\n    imagen.src = `build/img/grande/${id}.webp`;\r\n    \r\n    const overlay = document.createElement(\"DIV\");\r\n    overlay.appendChild(imagen);\r\n    overlay.classList.add(\"overlay\");\r\n    //Cuando se da click en el overlay (pantalla negra), cerra imagen \r\n    overlay.onclick = function () {\r\n        overlay.remove();\r\n        body.classList.remove(\"fijar-body\");\r\n    }\r\n\r\n    //boton para cerrar una imagen \r\n     const cerrarImg = document.createElement(\"P\");\r\n     cerrarImg.textContent = \"X\"\r\n     cerrarImg.classList.add(\"btn-cerrar\");\r\n\r\n     //CUANDO SE PRECIONA SE CIERRA LA IMAGEN\r\n     cerrarImg.onclick = function () {\r\n         overlay.remove();\r\n         body.classList.remove(\"fijar-body\");\r\n     }\r\n\r\n     overlay.appendChild(cerrarImg);\r\n\r\n   //mostrar en el HTML\r\n   const body = document.querySelector(\"body\");\r\n   body.appendChild(overlay);\r\n   body.classList.add(\"fijar-body\");\r\n}\r\n"]}